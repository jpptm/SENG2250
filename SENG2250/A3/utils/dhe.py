from util import fast_mod_exp
import secrets


class DiffieHellman:
    def __init__(self):
        self.p = 178011905478542266528237562450159990145232156369120674273274450314442865788737020770612695252123463079567156784778466449970650770920727857050009668388144034129745221171818506047231150039301079959358067395348717066319802262019714966524135060945913707594956514672855690606794135837542707371727429551343320695239
        self.g = 174068207532402095185811980123523436538604490794561350978495831040599953488455823147851597408940950725307797094915759492368300574252438761037084473467180148876118103083043754985190983472601550494691329488083395492313850000361646482644608492304078721818959999056496097769368017749273708962006689187956744210730

    def calculate_pubkey(self, xa):
        return fast_mod_exp(self.g, xa, self.p)

    def calculate_shared_secret(self, y, x):
        return fast_mod_exp(y, x, self.p)


"""dhe = DiffieHellman()

rng = secrets.SystemRandom()

a_choice = rng.randrange(1, dhe.p)
b_choice = rng.randrange(1, dhe.p)

a_compute = fast_mod_exp(dhe.g, a_choice, dhe.p)
b_compute = fast_mod_exp(dhe.g, b_choice, dhe.p)

Kab = fast_mod_exp(b_compute, a_choice, dhe.p)
Kba = fast_mod_exp(a_compute, b_choice, dhe.p)

print("Kab = {}".format(Kab))
print("Kba = {}".format(Kba))
print(Kab == Kba)"""

# Works
